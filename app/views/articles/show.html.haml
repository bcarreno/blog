- if admin?
  #content_menu
    = link_to 'Edit', edit_article_path(@article)
    \|
    = link_to 'Destroy', @article, :confirm => 'Are you sure?', :method => :delete
    \|
    = link_to 'New article', new_article_path
    \|
    = link_to 'List articles', articles_path

= content_tag(home_page? ? :h2 : :h1, @article.title, {:class => 'content_title'}, false)
.date
  = l @article.created_at, :format => :long
.article_body
  ~ raw(@article.markdown ? markdown(@article.body) : @article.body)
#comments
  %a{:id => 'comments', :name => 'comments'}
  %p#comments_count
    - if @article.comments.size == 0
      No comments yet
    - else
      = pluralize(@article.comments.size, 'comment')
  = render :partial => @article.comments

%h3 Leave a Comment

-# NOTE we don't build a new comment attached to @article, i.e. we don't modify the collection @article.comments
-#      this what Steve Klabnik talks here: https://gist.github.com/2379785
- comment = Comment.new({:article => @article}, :without_protection => true)
#new_comment
  = render :partial => 'comments/form', :locals => {:article => @article, :comment => comment}

:javascript
  $(function() {
    // Enable submit only if JS is enabled
    $(':submit').attr('disabled', false);
    $('form').submit(function() {
      var handler = function(response) {
        var error_explanation = $(response).find('#error_explanation');
        $('#error_explanation').remove();
        if (error_explanation.length > 0) {
          $('form').prepend(error_explanation);
        } else {
          $('#comments').append(response);
          var text, count;
          switch (count = $('.comment').length) {
            case 0:
              text = 'No comments yet';
              break;
            case 1:
              text = '1 comment';
              break;
            default:
              text = count + ' comments';
          }
          $('#comments_count').html(text);
          $('form')[0].reset();
        }
      };
      $.post("#{article_comments_path(@article)}", $(this).serializeArray(), handler);
      return false;
    });
  });
